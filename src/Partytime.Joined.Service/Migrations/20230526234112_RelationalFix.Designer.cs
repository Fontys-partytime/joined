// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Partytime.Joined.Service.Entities;

#nullable disable

namespace Partytime.Joined.Service.Migrations
{
    [DbContext(typeof(JoinedContext))]
    [Migration("20230526234112_RelationalFix")]
    partial class RelationalFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Partytime.Joined.Service.Entities.Joined", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool?>("Accepted")
                        .HasColumnType("boolean")
                        .HasColumnName("accepted");

                    b.Property<DateTimeOffset?>("Accepteddate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("accepteddate");

                    b.Property<DateTimeOffset?>("Joineddate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("joineddate");

                    b.Property<Guid>("Partyid")
                        .HasColumnType("uuid")
                        .HasColumnName("partyid");

                    b.Property<Guid>("Userid")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_joined");

                    b.ToTable("joined", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
